<local:SignalPage
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Signal.Views"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
	xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
	x:Class="Signal.Views.MessageDetailPage"
	xmlns:model="using:Signal.Models"
	xmlns:resources="using:Signal.Resources"
	xmlns:back="using:Bezysoftware.Navigation.BackButton"
	back:BackButtonManager.IsBackButtonEnabled="{x:Bind ViewModel.IsBackEnabled}"
	mc:Ignorable="d"
	NavigationCacheMode="Disabled">

	<Page.DataContext>
		<Binding Source="{Binding Message, Source={StaticResource Locator}}"/>
	</Page.DataContext>

	<Interactivity:Interaction.Behaviors>
		<Core:EventTriggerBehavior EventName="Loaded">
			<Core:InvokeCommandAction Command="{x:Bind ViewModel.Loaded}" />
		</Core:EventTriggerBehavior>
		<Core:EventTriggerBehavior EventName="Unloaded">
			<Core:InvokeCommandAction Command="{x:Bind ViewModel.Unloaded}" />
		</Core:EventTriggerBehavior>
	</Interactivity:Interaction.Behaviors>

	<Page.Resources>
		<Style x:Key="AttachmentButton" TargetType="Button">
			<Setter Property="BorderThickness" Value="5" />
			<Setter Property="Foreground" Value="Blue" />
			<Setter Property="BorderBrush" >
				<Setter.Value>
					<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
						<GradientStop Color="Yellow" Offset="0.0" />
						<GradientStop Color="Red" Offset="0.25" />
						<GradientStop Color="Blue" Offset="0.75" />
						<GradientStop Color="LimeGreen" Offset="1.0" />
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SendMessageTextBox" TargetType="TextBox">
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Background" Value="#FFFFFFFF"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="Padding" Value="2"/>
			<!--<Setter Property="BorderBrush">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFA3AEB9" Offset="0"/>
							<GradientStop Color="#FF8399A9" Offset="0.375"/>
							<GradientStop Color="#FF718597" Offset="0.375"/>
							<GradientStop Color="#FF617584" Offset="1"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>-->
		</Style>

		<MenuFlyout x:Name="flyout1" x:Key="MessageMenuFlyout">
			<MenuFlyoutItem x:Name="DeleteMessageFlyout" 
						Text="Delete TODO" Command="{x:Bind ViewModel.DeleteCommand}" CommandParameter="{Binding}"/>
			<MenuFlyoutItem x:Name="UpdateMessageFlyout" 
						Text="Update TODO" Command="{x:Bind ViewModel.UpdateCommand}" CommandParameter="{Binding}"/>
		</MenuFlyout>

		<DataTemplate x:Key="DeliveryStatus" x:DataType="model:MessageRecord">
			<Grid Width="20" Height="20">

				<!--<Interactivity:Interaction.Behaviors>
					<Core:DataTriggerBehavior x:Name="IsFailedTrigger" Binding="{Binding Converter={StaticResource DeliveryStatusConverter}}" Value="0">
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=delivered}" Value="Collapsed"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=sent}" Value="Collapsed"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=pending}" Value="Collapsed"/>
					</Core:DataTriggerBehavior>
					<Core:DataTriggerBehavior x:Name="IsPendingTrigger" Binding="{Binding Converter={StaticResource DeliveryStatusConverter}}" Value="1">
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=delivered}" Value="Collapsed"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=sent}" Value="Collapsed"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=pending}" Value="Visible"/>
						<Core:ChangePropertyAction PropertyName="IsActive" TargetObject="{Binding ElementName=pending}" Value="True"/>
					</Core:DataTriggerBehavior>
					<Core:DataTriggerBehavior x:Name="IsDeliveredTrigger" Binding="{Binding Converter={StaticResource DeliveryStatusConverter}}" Value="2">
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=delivered}" Value="Visible"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=sent}" Value="Collapsed"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=pending}" Value="Collapsed"/>
					</Core:DataTriggerBehavior>
					<Core:DataTriggerBehavior x:Name="IsSentTrigger" Binding="{Binding Converter={StaticResource DeliveryStatusConverter}}" Value="3">
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=delivered}" Value="Collapsed"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=sent}" Value="Visible"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=pending}" Value="Collapsed"/>
					</Core:DataTriggerBehavior>
				</Interactivity:Interaction.Behaviors>-->

				<Image x:Name="delivered" Width="16" Height="16" Source="ms-appx:///Assets/ic_done_all_white_18dp.png"/>
				<Image x:Name="sent" Width="16" Height="16" Source="ms-appx:///Assets/ic_done_white_18dp.png"/>
				<ProgressRing x:Name="pending" Width="12" Height="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Grid>
		</DataTemplate>

		<!--<DataTemplate x:Key="MessageBubbleLeft" x:DataType="model:Message">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>

				<Path Data="m 16,10 l 0,-8 l 16,8 l 0,0"
					Fill="{ThemeResource MessageBubbleBackgroundThemeBrush}"
					Margin="0,0,10,0"
					HorizontalAlignment="Left"
					Grid.Row="1"/>

				<StackPanel Grid.Row="2" Grid.Column="1" Margin="10,10,0,0" Padding="10" Background="{ThemeResource MessageBubbleBackgroundThemeBrush}">
					<TextBlock Text="{x:Bind Body}" />
					<TextBlock Text="{x:Bind DateSent, Converter={StaticResource DateConverter}}" TextWrapping="NoWrap"/>
				</StackPanel>


			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="MessageBubbleRight"  x:DataType="model:Message">
			<Grid HorizontalAlignment="Right">
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>



				<Path Data="m 16,0 l 16,8 l 0,-8 l -16,0"
					Fill="{ThemeResource MessageBubbleBackgroundThemeBrush}"
					Margin="0,0,10,0"
					HorizontalAlignment="Right"
					Grid.Row="2" Grid.Column="2"/>
			</Grid>
		</DataTemplate>-->



		<DataTemplate x:Key="MessageTemplate" x:DataType="model:MessageRecord">

			<Grid x:Name="MessageGrid" Padding="10" HorizontalAlignment="Right" FlyoutBase.AttachedFlyout="{StaticResource MessageMenuFlyout}">
				<VisualStateManager.CustomVisualStateManager>
					<resources:ExtendedVisualStateManager />
				</VisualStateManager.CustomVisualStateManager>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="DirectionGroup">
						<VisualState x:Name="Incoming">
							<VisualState.Setters>
								<Setter Target="TopRow.Visibility" Value="Visible"/>
								<Setter Target="BottomRow.Visibility" Value="Collapsed"/>
							</VisualState.Setters>
						</VisualState>
						<VisualState x:Name="Outgoing">
							<VisualState.Setters>
								<Setter Target="TopRow.Visibility" Value="Collapsed"/>
								<Setter Target="BottomRow.Visibility" Value="Visible"/>
							</VisualState.Setters>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>

				<Interactivity:Interaction.Behaviors>
					<Core:DataTriggerBehavior Binding="{x:Bind IsOutgoing}" Value="False">
						<resources:ExtendedGoToStateAction StateName="Incoming"/>
					</Core:DataTriggerBehavior>
					<Core:DataTriggerBehavior Binding="{x:Bind IsOutgoing}" Value="True">
						<resources:ExtendedGoToStateAction StateName="Outgoing"/>
					</Core:DataTriggerBehavior>
				</Interactivity:Interaction.Behaviors>

				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="ImageColumn" Width="Auto"/>
					<ColumnDefinition x:Name="TextColumn"  Width="*"/>
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition x:Name="TopRow" Height="Auto"/>
					<RowDefinition Height="*"/>
					<RowDefinition x:Name="BottomRow" Height="Auto"/>
				</Grid.RowDefinitions>

				<Border
					Width="40" Height="40"
					Grid.RowSpan="3" Grid.Column="0"
					Background="Red">
					
				</Border>

				<Path x:Name="triangleLeft"
					Data="M 0,0 L 0,8 L 16,8 Z"
					Fill="{ThemeResource MessageBubbleBackgroundThemeBrush}"
					Grid.Row="0" Grid.Column="1"
					Margin="10,0,0,0"
					HorizontalAlignment="Left"/>

				<StackPanel
					Grid.Row="1"
					Padding="8"  
					Background="{ThemeResource MessageBubbleBackgroundThemeBrush}"
					Grid.RowSpan="1" Grid.Column="1"
					d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition">
					<TextBlock Text="{x:Bind BodyI}" />
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<TextBlock Text="{x:Bind DateSent, Converter={StaticResource DateConverter}}" TextWrapping="NoWrap"/>
						<ContentPresenter x:Name="deliveryStatusPresenter" ContentTemplate="{StaticResource DeliveryStatus}"/>
					</StackPanel>
				</StackPanel>

				<Path x:Name="triangleRight"
					Data="M 0,0 L 16,0 L 16,8 Z"
					Fill="{ThemeResource MessageBubbleBackgroundThemeBrush}"
					Grid.Row="2" Grid.Column="1"
					Margin="0,0,10,0"
					HorizontalAlignment="Right"/>
				
  

				<!--<Interactivity:Interaction.Behaviors>
					<Core:DataTriggerBehavior x:Name="IsOutgoingTrueDataTrigger" Binding="{Binding DateSent, Converter={StaticResource DateConverter}}" Value="True">
						<Core:ChangePropertyAction PropertyName="ContentTemplate" TargetObject="{Binding ElementName=contentPresenter}" Value="{StaticResource MessageBubbleRight}"/>
						<Core:ChangePropertyAction PropertyName="HorizontalAlignment" TargetObject="{Binding ElementName=MessageGrid}" Value="Right"/>
						<Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=ImageBorder}" Value="Collapsed"/>
					</Core:DataTriggerBehavior>
					<Core:DataTriggerBehavior x:Name="IsOutgoingFalseDataTrigger" Binding="{Binding IsOutgoing}" Value="False">
						<Core:ChangePropertyAction PropertyName="ContentTemplate" TargetObject="{Binding ElementName=contentPresenter}" Value="{StaticResource MessageBubbleLeft}"/>
						<Core:ChangePropertyAction PropertyName="HorizontalAlignment" TargetObject="{Binding ElementName=MessageGrid}" Value="Left"/>
					</Core:DataTriggerBehavior>
					<Core:EventTriggerBehavior EventName="RightTapped">
						<resources:OpenMenuFlyoutAction />
					</Core:EventTriggerBehavior>
					<Core:EventTriggerBehavior EventName="Holding">
						<resources:OpenMenuFlyoutAction />
					</Core:EventTriggerBehavior>
				</Interactivity:Interaction.Behaviors>-->


				<!--<StackPanel Grid.Column="1" Margin="10,0,0,0">
					<TextBlock Text="" Style="{StaticResource TitleTextBlockStyle}"/>
					<TextBlock Text="{Binding body}" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap"/>
				</StackPanel>-->
				<!--<ContentPresenter x:Name="contentPresenter" Grid.Column="2" ContentTemplate="{StaticResource MessageBubbleRight}"/>-->
			</Grid>
		</DataTemplate>
	</Page.Resources>



	<Page.BottomAppBar>
		<CommandBar>
			<AppBarButton Icon="Phone" Command="{x:Bind ViewModel.PhoneCommand}"/>
			<CommandBar.SecondaryCommands>
				<AppBarButton x:Name="MessageResetSessionAppBarButton" x:Uid="MessageResetSessionAppBarButton"
							  Label="Reset secure session"
							  Command="{x:Bind ViewModel.ResetSessionCommand}"/>
			</CommandBar.SecondaryCommands>
		</CommandBar>
	</Page.BottomAppBar>
	
	<Page.TopAppBar>
		<CommandBar Template="{StaticResource CommandBarNoMore}">
			<CommandBar.Content>
				<StackPanel x:Name="MessageTitle"
							 d:LayoutOverrides="Width"
					Padding="4"
					Orientation="Vertical"
					Height="48"
					Background="{StaticResource SignalDimmedBrush}">
					<!--<TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE713;" FontSize="24" Margin="8" VerticalAlignment="Center"/>-->
					<TextBlock x:Name="DirectoryTitleText" x:Uid="DirectoryTitle"
					   Style="{ThemeResource BaseTextBlockStyle}"
					   Foreground="White"
					   Text="{x:Bind ViewModel.SelectedThread.Recipients.PrimaryRecipient.Name}" VerticalAlignment="Center"/>


				</StackPanel>
			</CommandBar.Content>
		</CommandBar>
	</Page.TopAppBar>

		<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

		<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>



			<ListView 
			x:Name="listView"
			ItemTemplate="{StaticResource MessageTemplate}" ItemsSource="{x:Bind ViewModel.Messages}"
			IncrementalLoadingTrigger="Edge"
			IncrementalLoadingThreshold="1"
			DataFetchSize="1"
			HorizontalContentAlignment="Stretch"
			VerticalContentAlignment="Stretch"
			IsItemClickEnabled="True"
			SelectionMode="None" VerticalAlignment="Bottom"
				  >

				<!--<Interactivity:Interaction.Behaviors>
				<resources:ScrollToBottomBehavior ItemsSource="{Binding Messages}"/>
			</Interactivity:Interaction.Behaviors>-->

				<ListView.ItemContainerStyle>
					<Style TargetType="ListViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					</Style>
				</ListView.ItemContainerStyle>
			</ListView>

			<Grid Grid.Row="1" Padding="10">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<Button x:Name="MessageAttachmentButton" x:Uid="MessageAttachmentButton" 
					Command="{x:Bind ViewModel.AttachCommand}">
				<SymbolIcon Symbol="Attach" />
			</Button>

			<TextBox x:Name="MessageTextBox" x:Uid="MessageTextBox"
					 Grid.Column="1"
					 PlaceholderText="Type a message"
					 TextWrapping="Wrap"
					 MaxHeight="172"
					 AcceptsReturn="True"
					 Text="{Binding MessageText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:LayoutOverrides="Width, Height"
					 Style="{StaticResource SendMessageTextBox}"/>

			<Button x:Name="MessageSendButton" x:Uid="MessageSendButton"
					Grid.Column="2"
					Command="{x:Bind ViewModel.SendCommand}">
				<SymbolIcon Symbol="Send" />
			</Button>
				
		</Grid>





		</Grid>
</local:SignalPage>
