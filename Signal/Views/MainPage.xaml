<Views:SignalPage
        x:Class="Signal.Views.MainPage"

    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Views="using:Signal.Views"
    xmlns:resources="using:Signal.Resources"
    xmlns:models="using:Signal.Models"
    xmlns:settings="using:Settings.UI.Xaml.Controls"
    xmlns:database="using:Signal.Database"
    xmlns:controls="using:Signal.Xaml.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    xmlns:back="using:Bezysoftware.Navigation.BackButton"
    back:BackButtonManager.IsBackButtonEnabled="False">

    <Page.Resources>
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>

        <MenuFlyout x:Key="ChatMenuFlyout">
            <MenuFlyoutItem x:Name="DeleteChatFlyout"
                        Text="Delete TODO" Command="{x:Bind ViewModel.DeleteChatCommand}" CommandParameter="{Binding}"/>
        </MenuFlyout>

        <DataTemplate x:Key="ChatTemplate"
                      x:DataType="models:Thread">
            <Grid x:Name="ChatTemplateGrid"
                  Height="64"
                  FlyoutBase.AttachedFlyout="{StaticResource ChatMenuFlyout}">
                <Interactivity:Interaction.Behaviors>
                    <!--<Core:DataTriggerBehavior x:Name="ReadFalseDataTrigger" Binding="{Binding Read}" Value="False">
                        <Core:ChangePropertyAction PropertyName="Style" Value="{StaticResource RecipientNameUnreadTextBlockStyle}" TargetObject="{Binding ElementName=RecipientNameTextBlock}"/>
                        <Core:ChangePropertyAction PropertyName="Style" Value="{StaticResource LastMessageUnreadTextBlockStyle}" TargetObject="{Binding ElementName=LastMessageTextBlock}"/>
                    </Core:DataTriggerBehavior>-->
                    <!--<Core:EventTriggerBehavior EventName="RightTapped">
                        <resources:OpenMenuFlyoutAction />
                    </Core:EventTriggerBehavior>
                    <Core:EventTriggerBehavior EventName="Holding">
                        <resources:OpenMenuFlyoutAction />
                    </Core:EventTriggerBehavior>-->
                </Interactivity:Interaction.Behaviors>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*"/>
                    <RowDefinition Height="0.5*"/>
                </Grid.RowDefinitions>

                <Border x:Name="ImageBorder"
                        Grid.RowSpan="2"
                        Width="48" Height="48">
                    <controls:AvatarView />
                    <!--<controls:ContactPicture Radius="32" Contact="{Binding Result}" DataContext="{x:Bind Recipients.PrimaryRecipient.ContactId, Converter={StaticResource ContactRetriever}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                    <!--<Image Height="64" Width="64" DataContext="{x:Bind Recipients.PrimaryRecipient.Number, Converter={StaticResource ContactPictureConverter}}" Source="{Binding Result}"/>-->
                </Border>



                <TextBlock x:Name="RecipientNameTextBlock"
                               Grid.Column="1"
                               Text="{x:Bind Recipients.ShortString}"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"
                               Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="8,0,0,0" />


                <TextBlock x:Name="DateTextBlock"
                               Grid.Column="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Text="{x:Bind Date, Converter={StaticResource DateConverter}}"
                               TextWrapping="NoWrap"
                           Foreground="{ThemeResource TextBoxDisabledForegroundThemeBrush}"
                               Style="{StaticResource CaptionTextBlockStyle}" />

                <TextBlock x:Name="LastMessageTextBlock"
                               Grid.Row="2"
                               Grid.Column="1"
                               Grid.ColumnSpan="2"
                               VerticalAlignment="Top"
                               Text="{x:Bind Snippet}"
                               TextWrapping="NoWrap"
                           Foreground="{ThemeResource TextBoxDisabledForegroundThemeBrush}"
                           Style="{StaticResource BodyTextBlockStyle}"
                               TextTrimming="WordEllipsis" HorizontalAlignment="Left" Margin="8,0,0,0" />

            </Grid>
        </DataTemplate>

        <CollectionViewSource x:Key="chatsCvs" Source="{x:Bind ViewModel.Chats}"/>


        <CollectionViewSource x:Key="contactsCvs" Source="{x:Bind ViewModel.Contacts}" />

        <DataTemplate x:Key="ContactsItemNarrow"
                      x:DataType="database:TextSecureDirectory+Directory">
            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Width="48" Height="48" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <controls:ContactPicture
                      Radius="24" Contact="{Binding Result}" DataContext="{x:Bind ContactId, Converter={StaticResource ContactRetriever}}"/>
                </Border>

                <TextBlock
                    Grid.Column="2"
                    Text="{x:Bind Name}"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Left"
                    Style="{ThemeResource BaseTextBlockStyle}"/>
                <TextBlock
                    Grid.Row="1" Grid.Column="2"
                    Text="{x:Bind Number}"
                    VerticalAlignment="Top"
                    Style="{ThemeResource BodyTextBlockStyle}"/>
            </Grid>
        </DataTemplate>

    </Page.Resources>

    <Page.DataContext>
        <Binding Source="{Binding Thread, Source={StaticResource Locator}}"/>
    </Page.DataContext>



    <Grid x:Name="MainGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <!--<VisualStateGroup x:Name="AdaptiveStates" >
                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="MasterColumn.Width" Value="*" />
                        <Setter Target="DetailColumn.Width" Value="0" />
                        <Setter Target="ChatListView.SelectionMode" Value="None" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>-->
            <VisualStateGroup x:Name="ThreadListSelectionStates">
                <VisualState x:Name="ThreadListSingleSelectionState">
                    <VisualState.Setters>
                        <Setter Target="ChatListView.SelectionMode" Value="None" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ThreadListMultiSelectionState">
                    <VisualState.Setters>
                        <Setter Target="ChatListView.SelectionMode" Value="Multiple"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="AppBarButtonState">
                <VisualState x:Name="ChatPivotState">
                    <VisualState.Setters>
                        <Setter Target="SelectChatsABBtn.Visibility" Value="Visible"/>
                        <Setter Target="ContactRefreshABBtn.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContactPivotState">
                    <VisualState.Setters>
                        <Setter Target="ContactRefreshABBtn.Visibility" Value="Visible"/>
                        <Setter Target="SelectChatsABBtn.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Interactivity:Interaction.Behaviors>
            <Interactions:DataTriggerBehavior Binding="{x:Bind ViewModel.PivotIndex, Mode=OneWay}" Value="0">
                <Interactions:GoToStateAction StateName="ChatPivotState"/>
            </Interactions:DataTriggerBehavior>
            <Interactions:DataTriggerBehavior Binding="{x:Bind ViewModel.PivotIndex, Mode=OneWay}" Value="1">
                <Interactions:GoToStateAction StateName="ContactPivotState"/>
            </Interactions:DataTriggerBehavior>
        </Interactivity:Interaction.Behaviors>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>


        <!--<StackPanel x:Name="SignalHeader"
                    Padding="4"
                    Orientation="Horizontal"
                    Height="48"
                    Background="{StaticResource SignalDimmedBrush}">
            
            </TextBlock>
        </StackPanel>-->

        <Pivot x:Name="MainPagePivot"
               x:Uid="MainPagePivot"
               SelectedIndex="{x:Bind ViewModel.PivotIndex, Mode=TwoWay}"
               Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
               Margin="0,0,0,0"
               >
            <Pivot.ItemContainerStyle>
                <Style TargetType="PivotItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </Pivot.ItemContainerStyle>
            
            <PivotItem Header="Chats" x:Name="ChatPiv">
                <settings:ListView x:Name="ChatListView"
                           ItemsSource="{Binding Source={StaticResource chatsCvs}}"
                           SelectionMode="Single"
                           ItemTemplate="{StaticResource ChatTemplate}"
                           IsItemClickEnabled="True"
                           resources:ItemClickCommand.Command="{x:Bind ViewModel.ChatClicked}" >

                    <settings:ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </settings:ListView.ItemContainerStyle>

                    <settings:ListView.Placeholder>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock x:Name="ChatListEmptyTextHeader" x:Uid="ChatListEmptyTextHeader" Text="" HorizontalAlignment="Center"
                       Style="{ThemeResource HeaderTextBlockStyle}"/>
                                <TextBlock x:Name="ChatListEmptyTextBody" x:Uid="ChatListEmptyTextBody" Text=""
                       Style="{ThemeResource CaptionTextBlockStyle}" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </settings:ListView.Placeholder>
                </settings:ListView>
            </PivotItem>
            <PivotItem Header="Contacts" x:Name="ContactPiv">
                <settings:ListView x:Name="ContactListView"
                                   x:Uid="ContactListView"
                                   ItemsSource="{Binding Source={StaticResource contactsCvs}}"
                                   ItemTemplate="{StaticResource ContactsItemNarrow}"
                                HorizontalContentAlignment="Stretch"
                                SelectionMode="Single"
                                IsItemClickEnabled="True"
                                resources:ItemClickCommand.Command="{x:Bind ViewModel.ContactClicked}">
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock
                        Text="test"
                        FontSize="40" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <settings:ListView.Placeholder>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock x:Name="ContactListEmptyHeader" x:Uid="ContactListEmptyHeader" Text="" HorizontalAlignment="Center"
                       Style="{ThemeResource HeaderTextBlockStyle}"/>
                                <TextBlock x:Name="ContactListEmptyBody" x:Uid="ContactListEmptyBody" Text=""
                       Style="{ThemeResource CaptionTextBlockStyle}" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </settings:ListView.Placeholder>
                </settings:ListView>

            </PivotItem>
        </Pivot>

        <!--<Frame x:Name="detailFrame" Grid.Column="1"
            Grid.RowSpan="2"
            BorderThickness="1,0,0,0"
            Padding="24,0" Foreground="{x:Null}" Background="#FFE8ADAD">
            <Frame.ContentTransitions>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Bottom"></PaneThemeTransition>
                </TransitionCollection>
            </Frame.ContentTransitions>
        </Frame>-->
    </Grid>
    
    <Page.TopAppBar>
        <CommandBar>

        </CommandBar>
    </Page.TopAppBar>

    <Page.BottomAppBar>
        <CommandBar>
            <!--Chats-->
            <AppBarButton x:Name="SelectChatsABBtn" x:Uid="ChatAppBarSelect" FontFamily="OverflowCheckGlyph" Label="">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xe762;" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Icon="Emoji" Command="{x:Bind ViewModel.TestCommand}"/>

            <!--Contacts-->
            <CommandBar.Content>
                <AppBarButton x:Name="ContactRefreshABBtn" x:Uid="ContactAppBarRefresh"
                              Label=""
                              IsCompact="True"
                              Command="{x:Bind ViewModel.RefreshContactsCommand}"
                              Icon="Refresh"/>
            </CommandBar.Content>

        </CommandBar>
    </Page.BottomAppBar>

</Views:SignalPage>
