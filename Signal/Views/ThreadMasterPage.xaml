<Views:SignalPage
        x:Class="Signal.Views.ThreadMasterPage"

    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Views="using:Signal.Views"
    xmlns:resources="using:Signal.Resources"
    xmlns:models="using:Signal.Models"
    xmlns:settings="using:Settings.UI.Xaml.Controls"
    xmlns:drawables="using:Signal.Drawables"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" 
    xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    xmlns:back="using:Bezysoftware.Navigation.BackButton"
    back:BackButtonManager.IsBackButtonEnabled="False">

    <!--<Interactivity:Interaction.Behaviors>
        <Interactions:EventTriggerBehavior EventName="Loaded">
            <Interactions:InvokeCommandAction Command="{x:Bind ViewModel.Loaded}" />
        </Interactions:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>-->

    <Page.Resources>
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="LastMessageUnreadTextBlockStyle" BasedOn="{StaticResource BodyTextBlockStyle}" TargetType="TextBlock">
            <!--<Setter Property="FontWeight" Value="SemiBold"/>-->
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style x:Key="RecipientNameUnreadTextBlockStyle" BasedOn="{StaticResource SubtitleTextBlockStyle}" TargetType="TextBlock">
            <!--<Setter Property="FontWeight" Value="SemiBold"/>-->
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <MenuFlyout x:Name="flyout1" x:Key="ThreadMenuFlyout">
            <MenuFlyoutItem x:Name="DeleteThreadFlyout" 
                        Text="Delete TODO" Command="{x:Bind ViewModel.DeleteCommand}" CommandParameter="{Binding}"/>
        </MenuFlyout>

        <DataTemplate x:Key="ThreadTemplate" x:DataType="models:Thread">
            <Grid x:Name="ThreadTemplateGrid"
                  Height="64"
                  FlyoutBase.AttachedFlyout="{StaticResource ThreadMenuFlyout}">
                <Interactivity:Interaction.Behaviors>
                    <!--<Core:DataTriggerBehavior x:Name="ReadFalseDataTrigger" Binding="{Binding Read}" Value="False">
                        <Core:ChangePropertyAction PropertyName="Style" Value="{StaticResource RecipientNameUnreadTextBlockStyle}" TargetObject="{Binding ElementName=RecipientNameTextBlock}"/>
                        <Core:ChangePropertyAction PropertyName="Style" Value="{StaticResource LastMessageUnreadTextBlockStyle}" TargetObject="{Binding ElementName=LastMessageTextBlock}"/>
                    </Core:DataTriggerBehavior>-->
                    <!--<Core:EventTriggerBehavior EventName="RightTapped">
                        <resources:OpenMenuFlyoutAction />
                    </Core:EventTriggerBehavior>
                    <Core:EventTriggerBehavior EventName="Holding">
                        <resources:OpenMenuFlyoutAction />
                    </Core:EventTriggerBehavior>-->
                </Interactivity:Interaction.Behaviors>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*"/>
                    <RowDefinition Height="0.5*"/>
                </Grid.RowDefinitions>

                <Border x:Name="ImageBorder"
                        Grid.RowSpan="2"
                        Width="64" Height="64">
                    <drawables:ContactPicture Radius="32" Contact="{Binding Result}" DataContext="{x:Bind Recipients.PrimaryRecipient.ContactId, Converter={StaticResource ContactRetriever}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <!--<Image Height="64" Width="64" DataContext="{x:Bind Recipients.PrimaryRecipient.Number, Converter={StaticResource ContactPictureConverter}}" Source="{Binding Result}"/>-->
                </Border>



                <TextBlock x:Name="RecipientNameTextBlock" 
                               Grid.Column="1"
                               Text="{x:Bind Recipients.ShortString}" 
                               TextWrapping="NoWrap"                               
                               TextTrimming="CharacterEllipsis"
                               Style="{StaticResource SubtitleTextBlockStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="8,0,0,0" />


                <TextBlock x:Name="DateTextBlock" 
                               Grid.Column="2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Top"
                               Text="{x:Bind Date, Converter={StaticResource DateConverter}}"
                               TextWrapping="NoWrap"
                               Style="{StaticResource BodyTextBlockStyle}" />

                <TextBlock x:Name="LastMessageTextBlock" 
                               Grid.Row="2"
                               Grid.Column="1"
                               Grid.ColumnSpan="2"
                               VerticalAlignment="Top"
                               Text="{x:Bind Snippet}" 
                               TextWrapping="NoWrap" 
                               TextTrimming="WordEllipsis" HorizontalAlignment="Left" Margin="8,0,0,0" />

            </Grid>
        </DataTemplate>

        <CollectionViewSource x:Key="threadCvs" Source="{x:Bind ViewModel.Threads}"/>

    </Page.Resources>

    <Page.DataContext>
        <Binding Source="{Binding Thread, Source={StaticResource Locator}}"/>
    </Page.DataContext>

    <Page.BottomAppBar>
        <CommandBar Grid.Row="2">

            <AppBarButton x:Name="AddItemButton" x:Uid="ThreadMasterAppBarAddItem" Label="" Icon="Add" Command="{x:Bind ViewModel.AddCommand}"/>
            <AppBarButton x:Name="SelectItmesBtn" x:Uid="ThreadMasterAppBarSelectItems" FontFamily="OverflowCheckGlyph" Label="">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xe762;" />
                </AppBarButton.Icon>
            </AppBarButton>

         </CommandBar>
    </Page.BottomAppBar>


    <Grid x:Name="ThreadGrid" 
          Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveStates" >
                <!-- CurrentStateChanged -->
                <!--<Interactivity:Interaction.Behaviors>
                    <Interactions:EventTriggerBehavior EventName="CurrentStateChanged">
                        <Interactions:InvokeCommandAction Command="{x:Bind ViewModel.StateChanged}" />
                    </Interactions:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>-->

                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="MasterColumn.Width" Value="*" />
                        <Setter Target="DetailColumn.Width" Value="0" />
                        <Setter Target="ThreadListView.SelectionMode" Value="None" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ThreadListSelectionStates">
                <VisualState x:Name="ThreadListSingleSelectionState">
                    <VisualState.Setters>
                        <Setter Target="ThreadListView.SelectionMode" Value="None" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ThreadListMultiSelectionState">
                    <VisualState.Setters>
                        <Setter Target="ThreadListView.SelectionMode" Value="Multiple"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="MasterColumn" Width="320" />
            <ColumnDefinition x:Name="DetailColumn" Width="*" />
        </Grid.ColumnDefinitions>


        <StackPanel x:Name="ThreadTitle" 
                    Padding="4"
                    Orientation="Horizontal"
                    Height="48"
                    Background="{StaticResource SignalDimmedBrush}"
                    >
            <!--<TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE713;" FontSize="24" Margin="8" VerticalAlignment="Center"/>-->
            <TextBlock x:Name="ThreadTitleText"  x:Uid="ThreadMasterHeaderThread"
                       Style="{ThemeResource BaseTextBlockStyle}"
                       Foreground="White" VerticalAlignment="Center"
                      >
            </TextBlock>
        </StackPanel>

        <settings:ListView x:Name="ThreadListView"
                           Grid.Row="1"
                           ItemsSource="{Binding Source={StaticResource threadCvs}}"
                           SelectionMode="Single"
                           ItemTemplate="{StaticResource ThreadTemplate}"
                           IsItemClickEnabled="True"
                           resources:ItemClickCommand.Command="{x:Bind ViewModel.ThreadClicked}"
                           >

            <!--<Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="ItemClick">
                    <Core:InvokeCommandAction Command="{x:Bind ViewModel.ThreadClicked}" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>-->

            <settings:ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </settings:ListView.ItemContainerStyle>

            <settings:ListView.Placeholder>
                <DataTemplate>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock x:Name="ThreadListViewEmptyTextBlock" x:Uid="ThreadListViewEmptyTextBlock" Text="" HorizontalAlignment="Center"
                       Style="{ThemeResource HeaderTextBlockStyle}"/>
                        <TextBlock x:Name="ThreadListViewEmpty2TextBlock" x:Uid="ThreadListViewEmpty2TextBlock" Text=""
                       Style="{ThemeResource CaptionTextBlockStyle}" HorizontalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </settings:ListView.Placeholder>
        </settings:ListView>

        

        <Frame x:Name="detailFrame" Grid.Column="1"
            Grid.RowSpan="2"
            BorderThickness="1,0,0,0"
            Padding="24,0" Foreground="{x:Null}" Background="#FFE8ADAD">
            <Frame.ContentTransitions>
                <TransitionCollection>
                    <PaneThemeTransition Edge="Bottom"></PaneThemeTransition>
                </TransitionCollection>
            </Frame.ContentTransitions>
        </Frame>

    </Grid>
</Views:SignalPage>
